#!/usr/bin/env ruby

require 'optparse'
require 'video_converter/converter'
require 'video_converter/version'

################
# Option parsing
################

include VideoConverter::Util

@options = VideoConverter::Converter::Options.new(
  boolean_env_var?(:VIDEO_CONVERTER_VERBOSE, default_value: false),
  boolean_env_var?(:VIDEO_CONVERTER_FOREGROUND, default_value: false),
  boolean_env_var?(:VIDEO_CONVERTER_CLEAN, default_value: true),
  ENV['VIDEO_CONVERTER_FOLDER'] || File.expand_path(VideoConverter::Converter::DEFAULT_FOLDER),
  ENV['VIDEO_CONVERTER_LOG_FOLDER'] || File.expand_path(VideoConverter::Converter::DEFAULT_LOG_FOLDER),
  ENV['VIDEO_CONVERTER_OUTPUT_FOLDER'] || File.expand_path(VideoConverter::Converter::DEFAULT_OUTPUT_FOLDER),
  float_env_var(:VIDEO_CONVERTER_CRF, default_value: VideoConverter::Converter::DEFAULT_CRF)
)

OptionParser.new do |opts|
  prefix = 'Usage: convert_videos '
  indent = ' ' * prefix.length

  opts.banner = "#{prefix}[-h|--help]\n" \
    "#{indent}[-v|--version]\n" \
    "#{indent}[-V|--[no-]verbose]\n" \
    "#{indent}[-F|--[no-]foreground]\n" \
    "#{indent}[--[no-]clean]\n" \
    "#{indent}[-f FOLDER|--folder=FOLDER]\n" \
    "#{indent}[-l LOG_FOLDER|--log-folder=LOG_FOLDER]\n" \
    "#{indent}[-o OUTPUT_FOLDER|--output-folder=OUTPUT_FOLDER]\n" \
    "#{indent}[-c CRF|--crf=CRF]"

  opts.on '-h', '--help', 'Prints this help' do
    puts opts
    exit
  end

  opts.on '-v', '--version', 'Prints the version number' do
    puts "convert_videos: video_converter #{VideoConverter::VERSION}"
    exit
  end

  opts.on '-V', '--[no-]verbose', 'Prints extra information at times' do |v|
    @options.verbose = v
  end

  opts.on '-F', '--[no-]foreground', 'Run conversions in the foreground (default: background)' do |f|
    @options.foreground = f
  end

  opts.on '--[no-]clean', 'Remove source files after conversion (default: remove)' do |c|
    @options.clean = c
  end

  opts.on '-f FOLDER', '--folder=FOLDER', "Folder for source videos (String: default #{VideoConverter::Converter::DEFAULT_FOLDER})" do |f|
    @options.folder = f
  end

  opts.on '-l LOG_FOLDER', '--log-folder=LOG_FOLDER', "Folder for log files (String: default #{VideoConverter::Converter::DEFAULT_LOG_FOLDER})" do |l|
    @options.log_folder = l
  end

  opts.on '-o OUTPUT_FOLDER', '--output-folder=OUTPUT_FOLDER', "Folder for output files (String: default #{VideoConverter::Converter::DEFAULT_OUTPUT_FOLDER})" do |o|
    @options.output_folder = o
  end

  opts.on '-c CRF', '--crf=CRF', "CRF value for H.264 (Float 0-51: default #{VideoConverter::Converter::DEFAULT_CRF})" do |c|
    @options.crf = c.to_f
  end
end.parse!

VideoConverter::Converter.new(@options).run
